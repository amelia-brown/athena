version: '2'

services:
  athenaapp:
    build: './athenaApp'
    volumes:
      - '.:/src'
    ports:
      - '3000:3000'
    environment:
      ATHENA_USER: 'http://athenauser:3001'
      TICKET: 'http://athenaticket:3002'
      KB: 'http://athenakb:3003'
      KBSEARCH: 'http://athenakbsearch:3004'
    links:
      - athenakb
      - athenakbsearch
      - athenaticket
      - athenauser
    restart: unless-stopped
  athenakb:
    build: './athenaKb'
    volumes:
      - '.:/src'
    ports:
      - '3003:3003'
    links:
      - postgres
    depends_on:
      - 'postgres'
    restart: unless-stopped
    environment:
      POSTGRES: 'postgres'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'default'
      POSTGRES_DB: 'athena'
  athenakbsearch:
    build: './athenaKbSearch'
    ports:
      - '3004:4004'
    depends_on:
      - athenaticket
      - athenakb
      - 'postgres'
    links:
      - postgres
      - elasticsearch
    restart: unless-stopped
    environment:
      POSTGRES: 'postgres'
      ELASTICSEARCH: 'elasticsearch'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'default'
      POSTGRES_DB: 'athena'
  athenaticket:
    build: './athenaTicket'
    ports:
      - '3002:3002'
    links:
      - postgres
    depends_on:
      - 'postgres'
    restart: unless-stopped
    environment:
      POSTGRES: 'postgres'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'default'
      POSTGRES_DB: 'athena'
  athenauser:
    build: './athenaUser'
    ports:
      - '3001:3001'
    depends_on:
      - 'mongo'
    links:
      - mongo
    environment:
      MONGO: 'mongo'
    restart: always
  mongo:
    image: mongo:3.2
    ports:
      - '27017:27017'
  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    restart: unless-stopped
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'default'
      POSTGRES_DB: 'athena'
  elasticsearch:
    expose:
      - '9300'
    image: elasticsearch:1.7
    ports:
      - '9300:9300'
